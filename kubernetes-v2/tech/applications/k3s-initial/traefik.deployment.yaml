---

apiVersion: apps/v1
kind: Deployment

metadata:
  name: traefik
  namespace: kube-system
  labels:
    app.kubernetes.io/instance: traefik-kube-system
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: traefik

spec:
  replicas: 2

  selector:
    matchLabels:
      app.kubernetes.io/instance: traefik-kube-system
      app.kubernetes.io/name: traefik

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  template:
    metadata:
      labels:
        app.kubernetes.io/instance: traefik-kube-system
        app.kubernetes.io/name: traefik
    spec:
      containers:
        - name: traefik

          image: rancher/mirrored-library-traefik:2.10.5
          imagePullPolicy: IfNotPresent

          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace

          args:
            - --global.checknewversion
            - --global.sendanonymoususage
            - --entrypoints.metrics.address=:9100/tcp
            - --entrypoints.traefik.address=:9000/tcp
            - --entrypoints.web.address=:8000/tcp
            - --entrypoints.websecure.address=:8443/tcp
            - --api.dashboard=true
            - --ping=true
            - --metrics.prometheus=true
            - --metrics.prometheus.entrypoint=metrics
            - --providers.kubernetescrd
            - --providers.kubernetesingress
            - --providers.kubernetesingress.ingressendpoint.publishedservice=kube-system/traefik
            - --entrypoints.websecure.http.tls=true

          ports:
            - containerPort: 9100
              name: metrics
              protocol: TCP
            - containerPort: 9000
              name: traefik
              protocol: TCP
            - containerPort: 8000
              name: web
              protocol: TCP
            - containerPort: 8443
              name: websecure
              protocol: TCP

          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
            httpGet:
              path: /ping
              port: 9000
              scheme: HTTP


          readinessProbe:
            failureThreshold: 1
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
            httpGet:
              path: /ping
              port: 9000
              scheme: HTTP

          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true

          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /tmp
              name: tmp

      dnsPolicy: ClusterFirst
      priorityClassName: system-cluster-critical

      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists

        - effect: NoSchedule
          key: agrrh.com/node-role
          operator: Equal
          value: master

      volumes:
        - emptyDir: {}
          name: data
        - emptyDir: {}
          name: tmp
