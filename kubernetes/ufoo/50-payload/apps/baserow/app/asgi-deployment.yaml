---
# Source: baserow/templates/asgi-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: baserow-asgi
  labels:
    helm.sh/chart: baserow-1.25.0
    app.kubernetes.io/name: baserow-asgi
    app.kubernetes.io/instance: baserow
    app.kubernetes.io/version: "1.19.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: baserow-asgi
      app.kubernetes.io/instance: baserow
  template:
    metadata:
      labels:
        app.kubernetes.io/name: baserow-asgi
        app.kubernetes.io/instance: baserow
    spec:
      serviceAccountName: baserow-asgi
      securityContext:
        fsGroup: 9999
        runAsGroup: 9999
        runAsUser: 9999
      containers:
        - name: baserow-asgi
          image: "baserow/backend:1.19.1"
          imagePullPolicy: Always
          workingDir: /baserow
          args:
            - "gunicorn"
          env:
            # Baserow Backend Settings
            - name: BASEROW_JWT_SIGNING_KEY
              valueFrom:
                secretKeyRef:
                  name: "baserow-backend"
                  key: jwt-signing-key
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "baserow-backend"
                  key: secret-key
            # Baserow Email Settings
            # Baserow File Upload Settings
            # Database Settings
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "baserow-postgresql"
                  key: "password"
            # Redis Settings
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "baserow-redis"
                  key: "redis-password"
          envFrom:
            - configMapRef:
                name: baserow
            - configMapRef:
                name: baserow-backend
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - curl
                - --fail
                - --silent
                - http://localhost:8000/api/_health/
            initialDelaySeconds: 120
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                - curl
                - --fail
                - --silent
                - http://localhost:8000/api/_health/
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
          securityContext:
            runAsGroup: 9999
            runAsNonRoot: true
            runAsUser: 9999
